// defaults to cdh5version from gradle.properties file, but can be overriden via -Pcdhversion=cdh4 on command line
// pulls all actual property values from gradle.properties
def cdh_version = project.hasProperty('cdhversion') && cdhversion == "cdh4" ? cdh4version : cdh5version

description = 'dga-giraph'

sourceSets {
    main {
        resources {
            exclude 'dga-mr1-giraph'
            exclude 'dga-yarn-giraph'
            exclude 'dga-config.xml'
            exclude 'dga'
        }
    }
}

configurations {
    hadoopProvided.transitive = true
    compile.extendsFrom hadoopProvided
}

dependencies {
    compile project(':dga-core')
    compile('org.apache.giraph:giraph-core:1.2.0-hadoop2') {
        exclude module: 'guava'
        exclude module: 'zookeeper'
    }
    hadoopProvided group: 'org.apache.hadoop', name: 'hadoop-client', version: cdh_version
    testCompile 'org.apache.giraph:giraph-core:1.2.0-hadoop2'
    testCompile "org.mockito:mockito-core:1.9.5"
    testCompile 'junit:junit:4.11'
    testCompile 'commons-httpclient:commons-httpclient:3.0.1'
    testCompile 'org.powermock:powermock-module-junit4:1.5.5'
    testCompile 'org.powermock:powermock-api-mockito:1.5.5'
    testCompile group: 'org.apache.mrunit', name: 'mrunit', version: '1.1.0', classifier: 'hadoop2'
}

task distJars(dependsOn: 'distConf', type: Copy) {
    from configurations.runtime - configurations.hadoopProvided
    from jar
    include "**/*.jar"
    into "${buildDir}/dist/lib"
}

task distConf(dependsOn: 'assemble', type: Copy) {
    from project.file("src/main/resources/dga-config.xml")
    into "${buildDir}/dist/conf"
}

task dist(dependsOn: 'distJars', type: Copy) {
    from "src/main/resources/"
    include "dga-mr1-giraph"
    include "dga-yarn-giraph"
    into "${buildDir}/dist/bin"
}
